/* src/lib/timer/timer.svelte generated by Svelte v3.46.4 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	space,
	text
} from "../../../_snowpack/pkg/svelte/internal.js";

import { gameOver } from '../store/store.js';
import { onMount } from '../../../_snowpack/pkg/svelte.js';

function create_fragment(ctx) {
	let section;
	let div1;
	let div0;
	let t1;
	let h1;
	let t2;
	let t3;

	let t4_value = (/*seconds*/ ctx[1] < 10
	? '0' + /*seconds*/ ctx[1]
	: /*seconds*/ ctx[1]) + "";

	let t4;

	return {
		c() {
			section = element("section");
			div1 = element("div");
			div0 = element("div");
			div0.textContent = "Trading Session Timer";
			t1 = space();
			h1 = element("h1");
			t2 = text(/*minutes*/ ctx[0]);
			t3 = text(":");
			t4 = text(t4_value);
			attr(div0, "class", "text-xs");
			attr(h1, "class", "text-xl text-white");
			attr(div1, "class", "flex flex-col columns-1 w-full text-center");
		},
		m(target, anchor) {
			insert(target, section, anchor);
			append(section, div1);
			append(div1, div0);
			append(div1, t1);
			append(div1, h1);
			append(h1, t2);
			append(h1, t3);
			append(h1, t4);
		},
		p(ctx, [dirty]) {
			if (dirty & /*minutes*/ 1) set_data(t2, /*minutes*/ ctx[0]);

			if (dirty & /*seconds*/ 2 && t4_value !== (t4_value = (/*seconds*/ ctx[1] < 10
			? '0' + /*seconds*/ ctx[1]
			: /*seconds*/ ctx[1]) + "")) set_data(t4, t4_value);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(section);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { timerStart } = $$props;
	let minutes, seconds;

	onMount(async () => {
		$$invalidate(0, minutes = parseInt(timerStart.split(':')[0]));
		$$invalidate(1, seconds = parseInt(timerStart.split(':')[1]));
	});

	setInterval(
		() => {
			if (seconds - 1 < 0) {
				if (minutes - 1 < 0) {
					gameOver.set(true);
				} else {
					$$invalidate(0, minutes -= 1);
					$$invalidate(1, seconds = 59);
				}
			} else {
				$$invalidate(1, seconds -= 1);
			}
		},
		1000
	);

	$$self.$$set = $$props => {
		if ('timerStart' in $$props) $$invalidate(2, timerStart = $$props.timerStart);
	};

	return [minutes, seconds, timerStart];
}

class Timer extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { timerStart: 2 });
	}
}

export default Timer;