import { S as SvelteComponent, i as init, b as safe_not_equal, k as append_styles, H as element, A as space, m as attr, K as set_style, f as insert, L as append, n as noop, j as detach } from './common/index-126f158f.js';

/* node_modules/svelte-loading-spinners/dist/Moon.svelte generated by Svelte v3.46.4 */

function add_css(target) {
	append_styles(target, "svelte-qfedrs", ".wrapper.svelte-qfedrs{height:var(--size);width:var(--size);border-radius:100%;animation:svelte-qfedrs-moonStretchDelay var(--duration) 0s infinite linear;animation-fill-mode:forwards;position:relative}.circle-one.svelte-qfedrs{top:var(--moonSize);background-color:var(--color);width:calc(var(--size) / 7);height:calc(var(--size) / 7);border-radius:100%;animation:svelte-qfedrs-moonStretchDelay var(--duration) 0s infinite linear;animation-fill-mode:forwards;opacity:0.8;position:absolute}.circle-two.svelte-qfedrs{opacity:0.1;border:calc(var(--size) / 7) solid var(--color);height:var(--size);width:var(--size);border-radius:100%;box-sizing:border-box}@keyframes svelte-qfedrs-moonStretchDelay{100%{transform:rotate(360deg)}}");
}

function create_fragment(ctx) {
	let div2;
	let div0;
	let t;
	let div1;

	return {
		c() {
			div2 = element("div");
			div0 = element("div");
			t = space();
			div1 = element("div");
			attr(div0, "class", "circle-one svelte-qfedrs");
			attr(div1, "class", "circle-two svelte-qfedrs");
			attr(div2, "class", "wrapper svelte-qfedrs");
			set_style(div2, "--size", /*size*/ ctx[3] + /*unit*/ ctx[1]);
			set_style(div2, "--color", /*color*/ ctx[0]);
			set_style(div2, "--moonSize", /*top*/ ctx[4] + /*unit*/ ctx[1]);
			set_style(div2, "--duration", /*duration*/ ctx[2]);
		},
		m(target, anchor) {
			insert(target, div2, anchor);
			append(div2, div0);
			append(div2, t);
			append(div2, div1);
		},
		p(ctx, [dirty]) {
			if (dirty & /*size, unit*/ 10) {
				set_style(div2, "--size", /*size*/ ctx[3] + /*unit*/ ctx[1]);
			}

			if (dirty & /*color*/ 1) {
				set_style(div2, "--color", /*color*/ ctx[0]);
			}

			if (dirty & /*unit*/ 2) {
				set_style(div2, "--moonSize", /*top*/ ctx[4] + /*unit*/ ctx[1]);
			}

			if (dirty & /*duration*/ 4) {
				set_style(div2, "--duration", /*duration*/ ctx[2]);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div2);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { color = "#FF3E00" } = $$props;
	let { unit = "px" } = $$props;
	let { duration = "0.6s" } = $$props;
	let { size = "60" } = $$props;
	let moonSize = +size / 7;
	let top = +size / 2 - moonSize / 2;

	$$self.$$set = $$props => {
		if ('color' in $$props) $$invalidate(0, color = $$props.color);
		if ('unit' in $$props) $$invalidate(1, unit = $$props.unit);
		if ('duration' in $$props) $$invalidate(2, duration = $$props.duration);
		if ('size' in $$props) $$invalidate(3, size = $$props.size);
	};

	return [color, unit, duration, size, top];
}

class Moon extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { color: 0, unit: 1, duration: 2, size: 3 }, add_css);
	}
}

export { Moon };
